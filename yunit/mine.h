//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// mine.h
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifdef _MSC_VER
#  pragma once
#endif

#ifndef _YUNIT_MINE_HEADER_
#define _YUNIT_MINE_HEADER_

#include "yunit.h"

namespace YUNIT_NS {

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct YUNIT_API Seconds
{
    Seconds(unsigned int num);
    unsigned int num_;
};

void YUNIT_API sleep(Seconds seconds);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
class DamageAgent
{
public:
    virtual void boom() = 0;
};

class YUNIT_API Mine
{
public:
    Mine(DamageAgent* damageAgent);

    void setTimer(Seconds seconds);
    void neutralize();

private:
    DamageAgent* damageAgent_;
};

} // namespace YUNIT_NS

#endif // _YUNIT_MINE_HEADER_